#!/bin/bash

error() { echo "$1" && exit; }

[ $EUID -eq 0 ] && error "Do not run this script as root."

checkInternet() {
    wget --hsts-file="$cachedir/wget-hsts" --quiet --spider google.com &&
        return 0 || { echo "No internet!" && return 1;}
}

which feh > /dev/null || error "This script required feh to work, so install it first!"
which wget > /dev/null || error "This script required wget to work, so install it first!"

cachedir="$HOME/.cache"
nowaterdir="$cachedir/nowater"
default_wp_url="https://raw.githubusercontent.com/justanoobcoder/nowater/master/default.jpg"
link="https://source.unsplash.com/random/"

[ ! -d "$nowaterdir" ] && mkdir -p "$nowaterdir"
[ ! -f "$nowaterdir/default.jpg" ] && checkInternet &&
    wget --hsts-file="$cachedir/wget-hsts" -T 60 --no-check-certificate -q -P down -O "$nowaterdir/default.jpg" $default_wp_url

usage() {
    echo "Usage: nowater <option> <argument>
                    [-b | --fehbg <feh bg opt>]
                    [-c | --fehopt <feh opt>]
                    [-s | --search <keyword>]
                    [-r | --subreddit <subreddit>]
                    [-l | --link <source>]
                    [-t | --time <cycle time>]
                    [-f | --file <image file>]
                    [-d | --directory <image directory>]
                    [-h | --help]"
    exit
}

unsplash() {
    local search="${search// /_}"
    link="${link}1920x1080";
    [ ! -z $search ] && link="${link}/?${search}"
}

reddit() {
    checkInternet || return

    [ ! -f "$nowaterdir/subreddits" ] && printf "wallpaper\nwallpapers" > "$nowaterdir/subreddits"

    readarray subreddits < "$nowaterdir/subreddits"
    a=${#subreddits[@]}
    b=$(($RANDOM % $a))
    sub=${subreddits[$b]}
    sub="$(echo -e "${sub}" | tr -d '[:space:]')"
    [ ! -z $1 ] && sub=$1
    url="https://www.reddit.com/r/$sub/hot/.json?raw_json=1&t="
    content=`wget --hsts-file="$cachedir/wget-hsts" -T 10 -q -O - $url`
    urls=$(echo -n "$content"| jq -r '.data.children[]|select(.data.post_hint|test("image")?) | .data.preview.images[0].source.url')
    arrURLS=($urls)
    wait
    size=${#arrURLS[@]}
    if [ $size -eq 0 ]; then
        [ -f /tmp/nowater.jpg ] && feh+=("/tmp/nowater.jpg") || "${feh[@]}" "$nowaterdir/default.jpg"
        error "The current subreddit is not valid."
    fi
    idx=$(($RANDOM % $size))
    target_url=${arrURLS[$idx]}
    wget --hsts-file="$cachedir/wget-hsts" -T 10 --no-check-certificate -q -P down -O "/tmp/nowater.jpg" $target_url &>/dev/null
}

PARSED_ARGUMENTS=$(getopt -a -n $0 -o b:l:s:r:c:t:f:d:h --long fehbg:,link:,search:,subreddit:,fehopt:,time:,file:,directory -- "$@")
[ $? -ne 0 ] && usage

while :; do
    case "${1}" in
        -b | --fehbg)     	bgtype=${2} ; shift 2 ;;
        -l | --link)      	custom_link=${2} ; shift 2 ;;
        -s | --search)      search=${2} ; shift 2 ;;
        -r | --subreddit) 	sub=${2} ; shift 2 ;;
        -c | --fehopt)    	custom=${2} ; shift 2 ;;
        -t | --time) 		time=${2} ; shift 2 ;;
        -f | --file) 		file=${2} ; shift 2 ;;
        -d | --directory) 	dir=${2} ; shift 2 ;;
        -- | '')            shift; break ;;
        -h | --help)        usage ;;
        *) echo "Unexpected option: $1 is not a valid option." ; usage ;;
    esac
done

feh=(feh --no-fehbg)
if [ ! -z "$bgtype" ]; then
    [ "$bgtype" == 'bg-center' ]    && feh+=(--bg-center)
    [ "$bgtype" == 'bg-fill' ]      && feh+=(--bg-fill)
    [ "$bgtype" == 'bg-max' ]       && feh+=(--bg-max)
    [ "$bgtype" == 'bg-scale' ]     && feh+=(--bg-scale)
    [ "$bgtype" == 'bg-tile' ]      && feh+=(--bg-tile)
else
    feh+=(--bg-scale)
fi

[ ! -z "$custom" ] && feh+=("$custom")

if [ ! -z "$dir" ]; then
    feh+=(--randomize)
    while :; do
        "${feh[@]}" "$dir"
        [ ! -z "$time" ] && sleep "$time" || break
    done
elif [ ! -z "$file" ]; then
	"${feh[@]}" "$file")
else
    while :; do
        if [ -f /tmp/login.nowall ]; then
            if [ "$custom_link" == "reddit" ] || [ ! -z "$sub" ]; then
                reddit "$sub"
            else
                [ ! -z "$custom_link" ] && link="$custom_link" || unsplash
                checkInternet && wget --hsts-file="$cachedir/wget-hsts" -q -O "/tmp/nowater.jpg" "$link"
            fi
            "${feh[@]}" "/tmp/nowater.jpg"
        else
            "${feh[@]}" "$nowaterdir/default.jpg"
            touch /tmp/login.nowall
        fi
        [ ! -z "$time" ] && sleep "$time" || break
    done
fi

exit 0
